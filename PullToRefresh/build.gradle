apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

build.doLast {

    //测试自定义task, 观察编译log里面是否有输出
    helloTask.execute()

    //导出R的Jar包
    exportJar.execute()

}

task exportJar(type: Jar) {
    //指定生成的jar名
    baseName 'rClasses'
    from buildDir.absolutePath + '/intermediates/classes/debug/'
    include '**/R.class'
    include '**/R$*.class'
    //打包到jar后的目录结构
    //into("com/xxx/xxx")
    destinationDir = file(buildDir.absolutePath + '/outputs/')
}

// 自定义task的用法
task helloTask(type: HelloGradleTask) {
    helloStr = 'hello from ovrride greeting ' + android.sourceSets.main.manifest.srcFile
}
// 自定义task的用法
class HelloGradleTask extends DefaultTask {

    def String helloStr = 'hello from Default HelloGradleTask '

    @TaskAction
    def hello() {
        println helloStr
    }
}